---
- name: Start Jackett
  when: jackett_enabled
  block:
    - name: Check for Jackett Breaking Changes
      ansible.builtin.include_role:
        name: breaking_changes
      vars:
        breaking_changes_application: jackett

    - name: Create Jackett Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ jackett_data_directory }}"

    - name: Jackett Docker Container
      community.docker.docker_container:
        name: "{{ jackett_container_name }}"
        image: "{{ jackett_image_name }}:{{ jackett_image_version }}"
        volumes:
          - "{{ jackett_data_directory }}:/config:rw"
          - "{{ jackett_torrents_root }}:/downloads"
          - "/etc/localtime:/etc/localtime:ro"
        ports:
          - "{{ jackett_port }}:9117"
        env:
          TZ: "{{ computer_timezone }}"
        restart_policy: unless-stopped
        memory: "{{ jackett_memory }}"
        labels:
          traefik.enable: "{{ (jackett_dns_accessible or jackett_available_externally) | string }}"
          traefik.http.services.jackett.loadbalancer.server.port: "9117"
          traefik.http.routers.jackett.rule: "Host(`{{ jackett_hostname }}.{{ dns_domain }}`)"
          traefik.http.routers.jackett.tls.domains[0].main: "{{ dns_domain }}"
          traefik.http.routers.jackett.tls.domains[0].sans: "*.{{ dns_domain }}"
          traefik.http.routers.jackett.tls.certresolver: "letsencrypt"
          traefik.http.routers.jackett.middlewares: "{{ omit if jackett_available_externally else 'blockExternal@file' }}"

- name: Stop Jackett
  when: not jackett_enabled
  block:
    - name: Stop Jackett
      community.docker.docker_container:
        name: "{{ jackett_container_name }}"
        state: absent
