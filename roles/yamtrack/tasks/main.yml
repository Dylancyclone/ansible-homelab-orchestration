---
- name: Start YamTrack
  when: yamtrack_enabled
  block:
    - name: Check for YamTrack Breaking Changes
      ansible.builtin.include_role:
        name: breaking_changes
      vars:
        breaking_changes_application: yamtrack

    - name: Create YamTrack Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ yamtrack_data_directory }}/data"
        - "{{ yamtrack_data_directory }}/redis"

    - name: Create yamtrack network
      community.docker.docker_network:
        name: "{{ yamtrack_network_name }}"

    - name: Create YamTrack redis Docker Container
      community.docker.docker_container:
        name: "{{ yamtrack_redis_container_name }}"
        image: "{{ yamtrack_redis_image_name }}:{{ yamtrack_redis_image_version }}"
        pull: true
        volumes:
          - "{{ yamtrack_data_directory }}/redis:/data"
        restart_policy: unless-stopped
        memory: "{{ yamtrack_redis_memory }}"
        networks:
          - name: "{{ yamtrack_network_name }}"

    - name: Create YamTrack Docker Container
      community.docker.docker_container:
        name: "{{ yamtrack_container_name }}"
        image: "{{ yamtrack_image_name }}:{{ yamtrack_image_version }}"
        pull: true
        ports:
          - "{{ yamtrack_port }}:8000"
        restart_policy: unless-stopped
        volumes:
          - "{{ yamtrack_data_directory }}/data:/yamtrack/db"
        env:
          SECRET: "longstring"
          REDIS_URL: "redis://yamtrack-redis:6379"
          URLS: "https://{{ yamtrack_hostname }}.{{ dns_domain }}"
          TMDB_API: "{{ yamtrack_tmdb_api if yamtrack_tmdb_api else omit }}"
          TMDB_NSFW: "{{ yamtrack_tmdb_nsfw | string }}"
          MAL_API: "{{ yamtrack_mal_api if yamtrack_mal_api else omit }}"
          MAL_NSFW: "{{ yamtrack_mal_nsfw | string }}"
          MU_NSFW: "{{ yamtrack_mu_nsfw | string }}"
          IGDB_ID: "{{ yamtrack_igdb_id if yamtrack_igdb_id else omit }}"
          IGDB_SECRET: "{{ yamtrack_igdb_secret if yamtrack_igdb_secret else omit }}"
          IGDB_NSFW: "{{ yamtrack_igdb_nsfw | string }}"
          SIMKL_ID: "{{ yamtrack_simkl_id if yamtrack_simkl_id else omit }}"
          SIMKL_SECRET: "{{ yamtrack_simkl_secret if yamtrack_simkl_secret else omit }}"
          WEB_CONCURRENCY: "{{ yamtrack_web_concurrency | string }}"
          TZ: "{{ computer_timezone }}"
        memory: "{{ yamtrack_memory }}"
        networks:
          - name: "{{ yamtrack_network_name }}"
        labels:
          traefik.enable: "{{ (yamtrack_dns_accessible or yamtrack_available_externally) | string }}"
          traefik.http.services.yamtrack.loadbalancer.server.port: "8000"
          traefik.http.routers.yamtrack.rule: "Host(`{{ yamtrack_hostname }}.{{ dns_domain }}`)"
          traefik.http.routers.yamtrack.tls.domains[0].main: "{{ dns_domain }}"
          traefik.http.routers.yamtrack.tls.domains[0].sans: "*.{{ dns_domain }}"
          traefik.http.routers.yamtrack.tls.certresolver: "letsencrypt"
          traefik.http.routers.yamtrack.middlewares: "{{ omit if yamtrack_available_externally else 'blockExternal@file' }}"

- name: Stop yamtrack
  when: not yamtrack_enabled
  block:
    - name: Stop YamTrack Docker Container
      community.docker.docker_container:
        name: "{{ yamtrack_container_name }}"
        state: absent
    - name: Stop YamTrack redis Docker Container
      community.docker.docker_container:
        name: "{{ yamtrack_redis_container_name }}"
        state: absent
    - name: Remove YamTrack network
      community.docker.docker_network:
        name: "{{ yamtrack_network_name }}"
        state: absent
