---
- name: Start The Lounge
  when: thelounge_enabled
  block:
    - name: Check for The Lounge Breaking Changes
      ansible.builtin.include_role:
        name: breaking_changes
      vars:
        breaking_changes_application: thelounge

    - name: The Lounge Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ thelounge_data_directory }}"
        - "{{ thelounge_data_directory }}/users"

    - name: Set up admin user
      ansible.builtin.copy:
        src: admin.json
        dest: "{{ thelounge_data_directory }}/users/admin.json"
        mode: "0777"

    - name: The Lounge Docker Container
      community.docker.docker_container:
        name: "{{ thelounge_container_name }}"
        image: "{{ thelounge_image_name }}:{{ thelounge_image_version }}"
        pull: true
        ports:
          - "{{ thelounge_web_port }}:9000"
          - "{{ thelounge_identd_port }}:9001"
        volumes:
          - "{{ thelounge_data_directory }}:/var/opt/thelounge"
          - "/var/run/dbus:/var/run/dbus"
        restart_policy: unless-stopped
        memory: "{{ thelounge_memory }}"
        labels:
          traefik.enable: "{{ (thelounge_dns_accessible or thelounge_available_externally) | string }}"
          traefik.http.services.thelounge.loadbalancer.server.port: "9000"
          traefik.http.routers.thelounge.rule: "Host(`{{ thelounge_hostname }}.{{ dns_domain }}`)"
          traefik.http.routers.thelounge.tls.domains[0].main: "{{ dns_domain }}"
          traefik.http.routers.thelounge.tls.domains[0].sans: "*.{{ dns_domain }}"
          traefik.http.routers.thelounge.tls.certresolver: "letsencrypt"
          traefik.http.routers.thelounge.middlewares: "{{ omit if thelounge_available_externally else 'blockExternal@file' }}"

- name: Stop The Lounge
  when: not thelounge_enabled
  block:
    - name: Stop The Lounge
      community.docker.docker_container:
        name: "{{ thelounge_container_name }}"
        state: absent
