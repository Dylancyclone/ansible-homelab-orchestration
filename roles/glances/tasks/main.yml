---
- name: Start Glances
  when: glances_enabled
  block:
    - name: Check for Glances Breaking Changes
      ansible.builtin.include_role:
        name: breaking_changes
      vars:
        breaking_changes_application: glances

    - name: Create Glances Docker Container
      community.docker.docker_container:
        name: "{{ glances_container_name }}"
        image: "{{ glances_image_name }}:{{ glances_image_version }}"
        pull: true
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock:ro"
          - "/etc/timezone:/etc/timezone:ro"
        pid_mode: host
        ports:
          - "{{ glances_web_port }}:61208"
          - "{{ glances_tcp_port }}:61209"
        env:
          GLANCES_OPT: "-w"
        restart_policy: unless-stopped
        security_opts: "{{ glances_security_options }}"
        memory: "{{ glances_memory }}"
        labels:
          traefik.enable: "{{ (glances_dns_accessible or glances_available_externally) | string }}"
          traefik.http.services.glances.loadbalancer.server.port: "61208"
          traefik.http.routers.glances.rule: "Host(`{{ glances_hostname }}.{{ dns_domain }}`)"
          traefik.http.routers.glances.tls.domains[0].main: "{{ dns_domain }}"
          traefik.http.routers.glances.tls.domains[0].sans: "*.{{ dns_domain }}"
          traefik.http.routers.glances.tls.certresolver: "letsencrypt"
          traefik.http.routers.glances.middlewares: "{{ omit if glances_available_externally else 'blockExternal@file' }}"

- name: Stop Glances
  when: not glances_enabled
  block:
    - name: Stop Glances
      community.docker.docker_container:
        name: "{{ glances_container_name }}"
        state: absent
