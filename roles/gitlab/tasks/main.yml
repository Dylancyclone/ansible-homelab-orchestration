---
- name: Start Gitlab
  when: gitlab_enabled
  block:
    - name: Check for Gitlab Breaking Changes
      ansible.builtin.include_role:
        name: breaking_changes
      vars:
        breaking_changes_application: gitlab

    - name: Create Gitlab Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ gitlab_data_directory }}/config"
        - "{{ gitlab_data_directory }}/log"
        - "{{ gitlab_data_directory }}/data"

    - name: Create Gitlab Docker Container
      community.docker.docker_container:
        name: "{{ gitlab_container_name }}"
        image: "{{ gitlab_image_name }}:{{ gitlab_image_version }}"
        pull: true
        volumes:
          - "{{ gitlab_data_directory }}/config:/etc/gitlab:rw"
          - "{{ gitlab_data_directory }}/log:/var/log/gitlab:rw"
          - "{{ gitlab_data_directory }}/data:/var/opt/gitlab:rw"
        ports:
          - "{{ gitlab_http_port }}:80"
          - "{{ gitlab_https_port }}:443"
          - "{{ gitlab_ssh_port }}:22"
        env:
          TZ: "{{ computer_timezone }}"
          PUID: "{{ gitlab_user_id }}"
          PGID: "{{ gitlab_group_id }}"
        restart_policy: unless-stopped
        hostname: "{{ gitlab_hostname }}.{{ dns_domain }}"
        memory: "{{ gitlab_memory }}"
        labels:
          traefik.enable: "{{ (gitlab_dns_accessible or gitlab_available_externally) | string }}"
          traefik.http.services.gitlab.loadbalancer.server.port: "80"
          traefik.http.routers.gitlab.rule: "Host(`{{ gitlab_hostname }}.{{ dns_domain }}`)"
          traefik.http.routers.gitlab.tls.domains[0].main: "{{ dns_domain }}"
          traefik.http.routers.gitlab.tls.domains[0].sans: "*.{{ dns_domain }}"
          traefik.http.routers.gitlab.tls.certresolver: "letsencrypt"
          traefik.http.routers.gitlab.middlewares: "{{ omit if gitlab_available_externally else 'blockExternal@file' }}"

- name: Stop Gitlab
  when: not gitlab_enabled
  block:
    - name: Stop Gitlab
      community.docker.docker_container:
        name: "{{ gitlab_container_name }}"
        state: absent
