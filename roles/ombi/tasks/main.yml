---
- name: Start Ombi
  when: ombi_enabled
  block:
    - name: Check for Ombi Breaking Changes
      ansible.builtin.include_role:
        name: breaking_changes
      vars:
        breaking_changes_application: ombi

    - name: Create Ombi Directories
      ansible.builtin.file:
        path: "{{ ombi_config_directory }}"
        state: directory

    - name: Ombi Docker Container
      community.docker.docker_container:
        name: "{{ ombi_container_name }}"
        image: "{{ ombi_image_name }}:{{ ombi_image_version }}"
        pull: true
        volumes:
          - "{{ ombi_config_directory }}:/config:rw"
        ports:
          - "{{ ombi_port }}:3579"
        env:
          TZ: "{{ computer_timezone }}"
          PUID: "{{ ombi_user_id }}"
          PGID: "{{ ombi_group_id }}"
        restart_policy: unless-stopped
        memory: "{{ ombi_memory }}"
        labels:
          traefik.enable: "{{ (ombi_dns_accessible or ombi_available_externally) | string }}"
          traefik.http.services.ombi.loadbalancer.server.port: "3579"
          traefik.http.routers.ombi.rule: "Host(`{{ ombi_hostname }}.{{ dns_domain }}`)"
          traefik.http.routers.ombi.tls.domains[0].main: "{{ dns_domain }}"
          traefik.http.routers.ombi.tls.domains[0].sans: "*.{{ dns_domain }}"
          traefik.http.routers.ombi.tls.certresolver: "letsencrypt"
          traefik.http.routers.ombi.middlewares: "{{ omit if ombi_available_externally else 'blockExternal@file' }}"

- name: Stop Ombi
  when: not ombi_enabled
  block:
    - name: Stop Ombi
      community.docker.docker_container:
        name: "{{ ombi_container_name }}"
        state: absent
