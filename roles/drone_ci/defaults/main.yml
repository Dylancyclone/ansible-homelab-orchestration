---
drone_ci_enabled: false
drone_ci_dns_accessible: "{{ traefik_enable_dns_for_all }}"
drone_ci_available_externally: false

# directories
drone_ci_data_directory: "{{ docker_home }}/drone-ci"

# network
drone_ci_hostname: drone-ci
drone_ci_http_port: 8001
drone_ci_runner_http_port: 8002
drone_ci_address: "http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ drone_ci_http_port }}"

# containers
drone_ci_container_name: drone-ci
drone_ci_image_name: drone/drone
drone_ci_image_version: 2

drone_ci_runner_container_name: drone-ci-runner
drone_ci_runner_image_name: drone/drone-runner-docker
drone_ci_runner_image_version: 1

drone_ci_container_names: # Used to check if app is running
  - "{{ drone_ci_container_name }}"
  - "{{ drone_ci_runner_container_name }}"

# specs
drone_ci_memory: 1g
drone_ci_agent_memory: 1g

# Drone-CI Application Config
# the users that'll be granted admin, comma separated. Should match a gitea user.
drone_ci_admin_user: admin

# shared secret - use openssl rand -hex 16 to generate your own
drone_ci_agent_secret: d052ab29a86a02c6b6ff1e5851ee15e1

# debug logging
drone_ci_debug_logging: false

# the url to your gitea server
drone_ci_gitea_url: "http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ gitea_http_port }}"

# gitea auth credentials. see https://drone-ci.org/docs/administration/forges/gitea for more info
drone_ci_gitea_client_id: notset
drone_ci_gitea_client_secret: notset

# how many drone runners to run
drone_ci_runner_capacity: 2

# name of the Drone runner
drone_ci_runner_name: "{{ inventory_hostname }}"
