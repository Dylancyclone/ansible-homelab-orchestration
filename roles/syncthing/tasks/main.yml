---
- name: Start Syncthing
  when: syncthing_enabled
  block:
    - name: Check for Syncthing Breaking Changes
      ansible.builtin.include_role:
        name: breaking_changes
      vars:
        breaking_changes_application: syncthing

    - name: Create Syncthing Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ syncthing_data_directory }}"

    - name: Syncthing Docker Container
      community.docker.docker_container:
        name: "{{ syncthing_container_name }}"
        image: "{{ syncthing_image_name }}:{{ syncthing_image_version }}"
        pull: true
        network_mode: host
        env:
          PUID: "{{ syncthing_user_id }}"
          PGID: "{{ syncthing_group_id }}"
          STGUIADDRESS: "{{ syncthing_gui_address }}"
        volumes: "{{ syncthing_volumes }}"
        restart_policy: unless-stopped
        memory: "{{ syncthing_memory }}"
        healthcheck:
          test: curl -fkLsS -m 2 127.0.0.1:8384/rest/noauth/health | grep -o --color=never OK || exit 1
          interval: 1m
          timeout: 10s
          retries: 3
        labels:
          traefik.enable: "{{ (syncthing_dns_accessible or syncthing_available_externally) | string }}"
          traefik.http.services.syncthing.loadbalancer.server.port: "8384"
          traefik.http.routers.syncthing.rule: "Host(`{{ syncthing_hostname }}.{{ dns_domain }}`)"
          traefik.http.routers.syncthing.tls.domains[0].main: "{{ dns_domain }}"
          traefik.http.routers.syncthing.tls.domains[0].sans: "*.{{ dns_domain }}"
          traefik.http.routers.syncthing.tls.certresolver: "letsencrypt"
          traefik.http.routers.syncthing.middlewares: "{{ omit if syncthing_available_externally else 'blockExternal@file' }}"

- name: Stop Syncthing
  when: not syncthing_enabled
  block:
    - name: Stop Syncthing
      community.docker.docker_container:
        name: "{{ syncthing_container_name }}"
        state: absent
