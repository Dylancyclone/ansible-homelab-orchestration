---
- name: Start openHAB
  when: openhab_enabled
  block:
    - name: Check for openHAB Breaking Changes
      ansible.builtin.include_role:
        name: breaking_changes
      vars:
        breaking_changes_application: openhab

    - name: Create openHAB Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ openhab_data_directory }}"
        - "{{ openhab_data_directory }}/conf"
        - "{{ openhab_data_directory }}/userdata"
        - "{{ openhab_data_directory }}/addons"

    - name: Create openHAB container
      community.docker.docker_container:
        name: "{{ openhab_container_name }}"
        image: "{{ openhab_image_name }}:{{ openhab_image_version }}"
        pull: true
        network_mode: host
        volumes:
          - "{{ openhab_data_directory }}/conf:/openhab/conf:rw"
          - "{{ openhab_data_directory }}/userdata:/openhab/userdata:rw"
          - "{{ openhab_data_directory }}/addons:/openhab/addons:rw"
          - "/etc/localtime:/etc/localtime:ro"
          - "/etc/timezone:/etc/timezone:ro"
        env:
          OPENHAB_HTTP_PORT: "{{ openhab_http_port | string }}"
          OPENHAB_HTTPS_PORT: "{{ openhab_https_port | string }}"
        restart_policy: unless-stopped
        memory: "{{ openhab_memory }}"
        labels:
          traefik.enable: "{{ (openhab_dns_accessible or openhab_available_externally) | string }}"
          traefik.http.services.openhab.loadbalancer.server.port: "{{ openhab_http_port }}"
          traefik.http.routers.openhab.rule: "Host(`{{ openhab_hostname }}.{{ dns_domain }}`)"
          traefik.http.routers.openhab.tls.domains[0].main: "{{ dns_domain }}"
          traefik.http.routers.openhab.tls.domains[0].sans: "*.{{ dns_domain }}"
          traefik.http.routers.openhab.tls.certresolver: "letsencrypt"
          traefik.http.routers.openhab.middlewares: "{{ omit if openhab_available_externally else 'blockExternal@file' }}"

- name: Stop openHAB
  when: not openhab_enabled
  block:
    - name: Stop openHAB
      community.docker.docker_container:
        name: "{{ openhab_container_name }}"
        state: absent
