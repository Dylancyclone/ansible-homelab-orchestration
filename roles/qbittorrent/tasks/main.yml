---
- name: Start qBittorrent
  when: qbittorrent_enabled
  block:
    - name: Check for qBittorrent Breaking Changes
      ansible.builtin.include_role:
        name: breaking_changes
      vars:
        breaking_changes_application: qbittorrent

    - name: Create qBittorrent Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ qbittorrent_data_directory }}"
        - "{{ qbittorrent_data_directory }}/config"
        - "{{ qbittorrent_download_directory }}"

    - name: Create qBittorrent Docker Container
      community.docker.docker_container:
        name: "{{ qbittorrent_container_name }}"
        image: "{{ qbittorrent_image_name }}:{{ qbittorrent_image_version }}"
        pull: true
        volumes:
          - "{{ qbittorrent_data_directory }}/config:/config:rw"
          - "{{ qbittorrent_download_directory }}:/downloads:rw"
          - "{{ torrents_root }}:/torrents:rw"
        ports:
          - "{{ qbittorrent_http_port }}:{{ qbittorrent_http_port }}"
          - "{{ qbittorrent_bt_port }}:6881"
          - "{{ qbittorrent_bt_port }}:6881/udp"
        env:
          TZ: "{{ computer_timezone }}"
          PUID: "{{ qbittorrent_user_id }}"
          PGID: "{{ qbittorrent_group_id }}"
          UMASK_SET: "{{ qbittorrent_umask }}"
          WEBUI_PORT: "{{ qbittorrent_http_port | string }}"
        restart_policy: unless-stopped
        memory: "{{ qbittorrent_memory }}"
        labels:
          traefik.enable: "{{ (qbittorrent_dns_accessible or qbittorrent_available_externally) | string }}"
          traefik.http.services.qbittorrent.loadbalancer.server.port: "{{ qbittorrent_http_port }}"
          traefik.http.routers.qbittorrent.rule: "Host(`{{ qbittorrent_hostname }}.{{ dns_domain }}`)"
          traefik.http.routers.qbittorrent.tls.domains[0].main: "{{ dns_domain }}"
          traefik.http.routers.qbittorrent.tls.domains[0].sans: "*.{{ dns_domain }}"
          traefik.http.routers.qbittorrent.tls.certresolver: "letsencrypt"
          traefik.http.routers.qbittorrent.middlewares: "{{ omit if qbittorrent_available_externally else 'blockExternal@file' }}"

- name: Stop qBittorrent
  when: not qbittorrent_enabled
  block:
    - name: Stop qBittorrent
      community.docker.docker_container:
        name: "{{ qbittorrent_container_name }}"
        state: absent
